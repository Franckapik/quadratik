<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta http-equiv="Content-Security-Policy" content="default-src *; style-src * 'checkout.stripe.com' ; script-src * 'self' 'unsafe-inline' localhost:* checkout.stripe.com 'unsafe-eval';">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  <title>Boutique Quadratik.fr</title>

  <link rel='stylesheet' href='/stylesheets/style.css' />
  <link href="https://use.fontawesome.com/releases/v5.0.6/css/all.css" rel="stylesheet">
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js">
  </script>
  <script src="https://www.paypalobjects.com/api/checkout.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/vue"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/zooming/1.2.7/zooming.js"></script>
  <script src="https://checkout.stripe.com/checkout.js"></script>


</head>

<body id="body_shop">
  <% include header.ejs %>

    <div id="app">
      <div class="shop_container">
        <% include include_shop/articles.ejs %>
          <% include include_shop/cartBox.ejs %>
            <div class="commande_process">
              <div class="w3-light-grey" v-show="progressionBar">
                <div id="myBar" class="w3-green"></div>
              </div>

              <% include include_shop/checkin.ejs %>
                <% include include_shop/livraison.ejs %>
                  <% include include_shop/paiement.ejs %>
                    <% include include_shop/cheque.ejs %>
                      <% include include_shop/success.ejs %>
            </div>
            <% include include_shop/askLogin.ejs %>
              <% include include_shop/cart_large.ejs %>
      </div>
    </div>
    <script>
      function move() {
        var elem = document.getElementById("myBar");
        var width = 100;
        var id = setInterval(frame, 10);

        function frame() {
          if (width >= 100) {
            clearInterval(id);
          } else {
            width++;
            elem.style.width = width + '%';
          }
        }
      }

      const shop = <%-JSON.stringify(data)%>;

      //Tri des éléments

console.log('SHOP ARRAY', shop);


var collections = new Map();

shop.forEach( product =>
{
		//Get the array associated with this collection id
		var currentCollection = collections.get(product.collectionId);

    //If there is no array for this value yet, create it.
    if (currentCollection == null)
    {
    	currentCollection = [];
      collections.set(product.collectionId, currentCollection);
    }

		//Place the current product into the array
		currentCollection.push(product);
} )

//The map will now contain an array for each collectionid, which again contains an array with its items
var collectionsArray = [];
collections.forEach( (products, collectionid, map) => {
		collectionsArray.push(products);
} )

console.log('Array-collection', collectionsArray);

      const vm = new Vue({
        el: "#app",
        data: {
          items: [],
          shop: shop,
          collections: collectionsArray,
          showCart: false,
          cart_large: false,
          checkin: false,
          livraison: false,
          livraison_newAdress: false,
          livraison_relais: false,
          livraison_domicile: false,
          paiement: false,
          cheque: false,
          boutique: true,
          createPwd: false,
          success: false,
          askLogin: false,
          progressionBar:false,
          cart_box:true


        },

        created: function() {

          this.updateCart();
        },

        computed: {
          total() {
            var total = 0;
            for (var i = 0; i < this.items.length; i++) {
              total += this.items[i].price * this.items[i].qty;
            }

            return total;
          },
          articlesQty() {
            var articlesQty = 0;
            for (var i = 0; i < this.items.length; i++) {
              articlesQty += this.items[i].qty;

            }

            return articlesQty;
          },
        },

        methods: {

          moveBar(value) {
            var elem = document.getElementById("myBar");
            var width = value;

            elem.style.width = width + '%';

          },

          addToCart(item) {
            fetch('/cart', {
                credentials: 'include',
                method: 'post',
                body: JSON.stringify({
                  item_name: item.name,
                  item_price: item.prix,
                  //item_collection: item.collection.name
                }),
                headers: new Headers({
                  'Content-Type': 'application/json'
                })
              }).then(res => res.json())
              .catch(error => console.error('Error:', error))
              .then(response => console.log('POST Success:', response.add));
            this.updateCart();
          },
          removeFromCart(item) {
            fetch('/cart/' + item.name, {
                credentials: 'include',
                method: 'delete'
              }).then(res => res.json())
              .catch(error => console.error('Error:', error))
              .then(response => console.log('DELETE Success:', response.cart));
            this.updateCart();
          },
          updateCart() {
            fetch('/cart', {
                credentials: 'include',
                method: 'get',
                headers: new Headers({
                  'Content-Type': 'application/json'
                })
              }).then(res => res.json())
              .catch(error => console.error('Error:', error))
              .then(
                function(response) {
                  vm.items = response.cart;
                });
          },
          emptyCart() {
            fetch('/cart', {
              credentials: 'include',
              method: 'put'
            });

            this.updateCart();
          }
        }
      });

      //stripe
      var handler = StripeCheckout.configure({
        key: 'pk_test_oaiyISu3eJI542wOXmZ0ePd4',
        image: '/images/logo_black.svg',
        locale: 'fr',
        token: function(token) {

          fetch('/charge/stripe', {
            credentials: 'include',
            method: 'post',
            body: JSON.stringify({
              token: token,
              amount: vm.total
            }),
            headers: new Headers({
              'Content-Type': 'application/json'
            })
          }).then(res => res.json()).then(

            function(response) {
              console.log(response.res);
              window.location = "/pay_success?charge_id=" + response.chargeID;
              vm.success = true;
              var order_id = x;
            }

          );

        }
      });

      document.getElementById('customButton').addEventListener('click', function(e) {
        // Open Checkout with further options:
        handler.open({
          name: 'Quadratik.fr',
          description: 'Spécialiste du diffuseur acoustique',
          currency: 'eur',
          amount: vm.total * 100
        });
        e.preventDefault();
      });

      // Close Checkout on page navigation:
      window.addEventListener('popstate', function() {
        handler.close();
      });
    </script>

<% include footer.ejs %>

</body>

</html>
